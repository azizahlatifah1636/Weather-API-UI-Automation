name: PR Quality Check

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: ☕ Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: 🔍 Run SpotBugs
      run: |
        mvn compile spotbugs:check || true
        
    - name: 🧹 Check code formatting
      run: |
        mvn spotless:check || true
        
    - name: 🧪 Run unit tests
      run: |
        mvn test -Dtest="**/unit/**/*Test"
        
    - name: 📊 Test coverage
      run: |
        mvn jacoco:report
        
    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: target/site/jacoco/jacoco.xml
        
    - name: 💬 Comment PR with test results
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let comment = '## 🧪 PR Quality Check Results\n\n';
          
          // Add test results summary
          comment += '### Test Execution\n';
          comment += '- ✅ Code compilation: Passed\n';
          comment += '- 🧪 Unit tests: Check logs for details\n';
          comment += '- 📊 Coverage report: Available in artifacts\n\n';
          
          comment += '### Next Steps\n';
          comment += '- Review test results in the Actions tab\n';
          comment += '- Ensure all checks pass before merging\n';
          comment += '- Add integration tests if needed\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run security scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_JAVA: true
        VALIDATE_XML: true
        VALIDATE_YAML: true
