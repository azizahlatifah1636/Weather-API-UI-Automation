name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: â˜• Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: ðŸ“¦ Build and package
      run: |
        mvn clean package -DskipTests
        
    - name: ðŸ§ª Run full test suite
      run: |
        mvn clean test
        mvn allure:report
        
    - name: ðŸ“Š Generate release report
      run: |
        # Create release notes from test results
        echo "# Release Notes" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Test Results Summary" >> RELEASE_NOTES.md
        echo "- Total Tests: $(find allure-results -name '*-result.json' | wc -l)" >> RELEASE_NOTES.md
        echo "- Generated: $(date)" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Changes in this release" >> RELEASE_NOTES.md
        git log --oneline $(git describe --tags --abbrev=0)..HEAD >> RELEASE_NOTES.md
        
    - name: ðŸ“¤ Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        
    - name: ðŸ“¦ Upload test artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/site/allure-maven-plugin/
        asset_name: allure-report.zip
        asset_content_type: application/zip
